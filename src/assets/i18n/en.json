{
  "textDirection": "left",
  "general": {
    "yes": "Yes",
    "no": "No",
    "download": "Download",
    "generate htaccess file": "Generate htaccess file",
    "copied to clipboard": "Copied to clipboard",
    "live preview": "Live preview"
  },
  "introduction": "Generate the .htaccess file for your Angular web-application and place it next to your app's index.html. Rename the file from \"htaccess.txt\" to \".htaccess\" after the download finished.",
  "alerts": {
    "server requirements": "In order to make the generated .htaccess file work your web-server must support .htaccess files. Web-servers like nginx (e.g. Github Pages) do not support .htaccess files."
  },
  "questions": {
    "show description": "Click on the question mark next to a question in order to get helpful information.",
    "baseHref": {
      "header": "Have you set the base-href attribute correctly?",
      "content": "If your web-application is installed directly on the root on your domain you don't need to change your baseHref attribute. Otherwise set the base-href attribute with the path from the root.<br/><br/>For example, if your app is installed on <code>https://myapp.com/directory/app/</code> your base-href attribute must be <code>/directory/app/</code>. Then you would use this command: <code>ng build --prod --base-href \"/directory/app/\"</code>"
    },
    "httpsRedirection": {
      "header": "Do you need a redirection from HTTP to HTTPS?"
    },
    "exclusions": {
      "header": "Do you want to exclude subdirectories?",
      "description": "Add the directories:"
    },
    "browserCaching": {
      "header": "Do you want to prevent browser caching?",
      "description": "In some cases you will face the browser caching issue: files with the same name will be cached by the browser and loaded regardless of whether the file's content was changed or not. With this option browsers are going to load all files, that were not generated by Angular, from the web-server."
    }
  }
}
